name: Build, Test and Deploy to Prod

on:
  push:
    branches:
      - main

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  RUST_LOG: "assist_lamfo=info"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build and test code
        run: |
          cargo build --verbose
          cargo test --verbose
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/bake-action@v2.3.0
        with:
          push: true

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install sshpass
        run: sudo apt-get install sshpass
      
      - name: Copy docker_env folder to droplet
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no -r docker_env root@${{ vars.DROPLET_IP }}:~

      - name: Copy docker-compose-deploy.yml to droplet
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose-deploy.yml root@${{ vars.DROPLET_IP }}:~

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP }}
          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd ~
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            export RUST_LOG=assist_lamfo=info
            docker compose -f docker-compose-deploy.yml down
            docker compose -f docker-compose-deploy.yml pull
            docker compose -f docker-compose-deploy.yml up -d